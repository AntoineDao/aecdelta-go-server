/*
 * aecdeltas
 *
 * The AEC Deltas OpenAPI Spec
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"

	// WARNING!
	// Change this to a fully-qualified import path
	// once you place this file into your project.
	// For example,
	//
	//    store "github.com/myname/myrepo/pkg/store"
	//
	store "github.com/antoinedao/aecdelta-go-server/pkg/store"
)

// UsersGet - Query users and get a list. There are no secret users here so no permissons are required!
func UsersGet(c *gin.Context) {
	// Get stream query parameter
	stream := c.DefaultQuery("stream", "")

	// Get streamRole query parameter
	streamRole := c.DefaultQuery("streamRole", "")

	// Get project query parameter
	project := c.DefaultQuery("project", "")

	// Get projectRole query parameter
	projectRole := c.DefaultQuery("projectRole", "")

	// Get permission query parameter
	permission := c.DefaultQuery("permission", "")

	// Initialise response object
	response := []User{}

	// Execute operation from the store package
	err := store.UsersGet(c, &response, stream, streamRole, project, projectRole, permission)

	if err != nil {
		c.AbortWithStatusJSON(err.StatusCode(), err)
	}

	c.JSON(200, response)
}

// UsersIdGet - Get a single user by ID. There are no secret users here so no permissons are required!
func UsersIdGet(c *gin.Context) {
	// Get id path parameter
	id := c.Param("id")

	// Initialise response object
	response := User{}

	// Execute operation from the store package
	err := store.UsersIdGet(c, &response, id)

	if err != nil {
		c.AbortWithStatusJSON(err.StatusCode(), err)
	}

	c.JSON(200, response)
}
