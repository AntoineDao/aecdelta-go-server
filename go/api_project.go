/*
 * aecdeltas
 *
 * The AEC Deltas OpenAPI Spec
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"

	// WARNING!
	// Change this to a fully-qualified import path
	// once you place this file into your project.
	// For example,
	//
	//    store "github.com/myname/myrepo/pkg/store"
	//
	store "github.com/antoinedao/aecdelta-go-server/pkg/store"

)

// ProjectsGet - 
func ProjectsGet(c *gin.Context) {
	// Run Auth checks here

	// Run data store operation
	// `resource` must be of type map[string]interface{}
	resource, err := store.ProjectsGet(c)

	if err != nil {
		c.AbortWithStatusJSON(err.StatusCode(), err)
	}

	c.JSON(http.StatusOK, resource)
}

// ProjectsIdDelete - 
func ProjectsIdDelete(c *gin.Context) {
	// Run Auth checks here

	// Run data store operation
	// `resource` must be of type map[string]interface{}
	resource, err := store.ProjectsIdDelete(c)

	if err != nil {
		c.AbortWithStatusJSON(err.StatusCode(), err)
	}

	c.JSON(http.StatusOK, resource)
}

// ProjectsIdGet - 
func ProjectsIdGet(c *gin.Context) {
	// Run Auth checks here

	// Run data store operation
	// `resource` must be of type map[string]interface{}
	resource, err := store.ProjectsIdGet(c)

	if err != nil {
		c.AbortWithStatusJSON(err.StatusCode(), err)
	}

	c.JSON(http.StatusOK, resource)
}

// ProjectsIdPut - 
func ProjectsIdPut(c *gin.Context) {
	// Run Auth checks here

	// Run data store operation
	// `resource` must be of type map[string]interface{}
	resource, err := store.ProjectsIdPut(c)

	if err != nil {
		c.AbortWithStatusJSON(err.StatusCode(), err)
	}

	c.JSON(http.StatusOK, resource)
}

// ProjectsPost - 
func ProjectsPost(c *gin.Context) {
	// Run Auth checks here

	// Run data store operation
	// `resource` must be of type map[string]interface{}
	resource, err := store.ProjectsPost(c)

	if err != nil {
		c.AbortWithStatusJSON(err.StatusCode(), err)
	}

	c.JSON(http.StatusOK, resource)
}
